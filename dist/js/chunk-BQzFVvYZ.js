import{d as e,q as t}from"./index-BK0pbtWx.js";import{a as n,bM as a}from"./chunk-D-fjcump.js";const r={"job.forecast.started":(e,n)=>{n.setQueryData(t.forecastJob(e.jobId),{...e,status:"running",startedAt:(new Date).toISOString()})},"job.forecast.progress":(e,n)=>{n.setQueryData(t.forecastJob(e.jobId),t=>({...t,...e,updatedAt:(new Date).toISOString()}))},"job.forecast.completed":(e,n)=>{n.setQueryData(t.forecastJob(e.jobId),{...e,status:"completed",completedAt:(new Date).toISOString()}),n.invalidateQueries({queryKey:["forecasts"]}),n.invalidateQueries({queryKey:["forecast-series"]})},"job.forecast.failed":(e,n)=>{n.setQueryData(t.forecastJob(e.jobId),{...e,status:"failed",failedAt:(new Date).toISOString()})},"job.stock.started":(e,n)=>{n.setQueryData(t.stockOptimizationJob(e.jobId),{...e,status:"running",startedAt:(new Date).toISOString()})},"job.stock.completed":(e,n)=>{n.setQueryData(t.stockOptimizationJob(e.jobId),{...e,status:"completed",completedAt:(new Date).toISOString()}),n.invalidateQueries({queryKey:["stock-optimization"]}),n.invalidateQueries({queryKey:["stock-levels"]}),n.invalidateQueries({queryKey:["reorder-suggestions"]})},"job.stock.failed":(e,n)=>{n.setQueryData(t.stockOptimizationJob(e.jobId),{...e,status:"failed",failedAt:(new Date).toISOString()})},"job.workingcapital.completed":(e,n)=>{n.setQueryData(t.workingCapitalJob(e.jobId),{...e,status:"completed",completedAt:(new Date).toISOString()}),n.invalidateQueries({queryKey:["working-capital"]}),n.invalidateQueries({queryKey:["wc-projections"]}),n.invalidateQueries({queryKey:["wc-kpis"]})},"metrics.kpi.updated":(e,n)=>{n.setQueryData(t.kpiMetrics(e.timeRange,e.filters),t=>({...t,...e.metrics,updatedAt:(new Date).toISOString()}))},"metrics.capacity.updated":(e,n)=>{n.setQueryData(t.capacityUtilization(e.facilities,e.timeRange),t=>({...t,...e.utilization,updatedAt:(new Date).toISOString()}))},"metrics.system.health":(e,n)=>{n.setQueryData(t.systemHealth(),{...e,timestamp:(new Date).toISOString()})},"alert.stock.low":(e,t)=>{t.invalidateQueries({queryKey:["stock-levels"]}),t.invalidateQueries({queryKey:["reorder-suggestions"]})},"alert.stock.critical":(e,t)=>{t.invalidateQueries({queryKey:["stock-levels"]}),t.invalidateQueries({queryKey:["reorder-suggestions"]})},"alert.workingcapital.breach":(e,t)=>{t.invalidateQueries({queryKey:["wc-projections"]}),t.invalidateQueries({queryKey:["wc-kpis"]})},"job.import.started":(e,n)=>{n.setQueryData(t.importJob(e.jobId),{...e,status:"running",startedAt:(new Date).toISOString()})},"job.import.completed":(e,n)=>{n.setQueryData(t.importJob(e.jobId),{...e,status:"completed",completedAt:(new Date).toISOString()}),n.invalidateQueries({queryKey:["import-jobs"]})},"job.import.failed":(e,n)=>{n.setQueryData(t.importJob(e.jobId),{...e,status:"failed",failedAt:(new Date).toISOString()})},"system.maintenance.start":(e,n)=>{n.setQueryData(t.systemHealth(),t=>({...t,maintenance:!0,maintenanceMessage:e.message}))},"system.maintenance.end":(e,n)=>{n.setQueryData(t.systemHealth(),e=>({...e,maintenance:!1,maintenanceMessage:null}))}},o=({endpoint:t="/api/events",enabled:o=!0,reconnectDelay:s=3e3,maxReconnectAttempts:i=10,onConnect:c=null,onDisconnect:u=null,onError:l=null,onMessage:d=null}={})=>{const[m,p]=n.useState({connected:!1,connecting:!1,error:null,reconnectAttempts:0}),y=n.useRef(null),g=n.useRef(null),b=a(),[S]=n.useState([]),D=n.useCallback(e=>{},[]),f=n.useCallback(t=>{try{const e=JSON.parse(t.data);D({type:t.type,data:e}),d&&d(t.type,e);const n=r[t.type];n&&n(e,b),window.dispatchEvent(new CustomEvent("sse-message",{detail:{type:t.type,data:e}}))}catch(n){e.error("Error parsing SSE message:",n,t)}},[d,b,D]),Q=n.useCallback(()=>{if(o&&!y.current){p(e=>({...e,connecting:!0,error:null}));try{const n=new EventSource(t);y.current=n,n.onopen=()=>{p({connected:!0,connecting:!1,error:null,reconnectAttempts:0}),c&&c(),g.current&&(clearTimeout(g.current),g.current=null)},n.onerror=t=>{e.error("SSE connection error:",t),p(e=>({connected:!1,connecting:!1,error:t,reconnectAttempts:e.reconnectAttempts+1})),l&&l(t),n.close(),y.current=null,m.reconnectAttempts<i&&(g.current=setTimeout(()=>{Q()},s))},n.onmessage=e=>{f({type:"message",data:e.data})},Object.keys(r).forEach(e=>{n.addEventListener(e,f)})}catch(n){e.error("Failed to create SSE connection:",n),p(e=>({...e,connecting:!1,error:n}))}}},[o,t,i,s,c,l,f,m.reconnectAttempts]),j=n.useCallback(()=>{y.current&&(y.current.close(),y.current=null),g.current&&(clearTimeout(g.current),g.current=null),p({connected:!1,connecting:!1,error:null,reconnectAttempts:0}),u&&u()},[u]),k=n.useCallback(()=>{j(),setTimeout(Q,100)},[j,Q]);return n.useEffect(()=>(o&&Q(),()=>{j()}),[o,Q,j]),n.useEffect(()=>()=>{j()},[j]),{connectionState:m,eventLog:S,connect:Q,disconnect:j,reconnect:k,isConnected:m.connected,isConnecting:m.connecting,hasError:!!m.error,canReconnect:m.reconnectAttempts<i}};export{o as u};
