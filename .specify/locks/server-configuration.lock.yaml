# Server Configuration Component Lock File
# TASK-004: Specification Lock to Prevent AI Drift
# This file defines immutable requirements for server configuration

component: Server Configuration
version: 1.0.0
locked: true
created: 2025-09-22T16:45:00Z
last_updated: 2025-09-22T16:45:00Z

# CRITICAL INVARIANTS - NEVER CHANGE THESE
invariants:
  - server_file: "server-unified.js is the ONLY production server file"
  - es_modules: "Server MUST use ES modules syntax (import/export)"
  - environment_validation: "Environment validation MUST run before any other initialization"
  - health_endpoints: "Health endpoints MUST be accessible without authentication"
  - security_headers: "Helmet security headers MUST be configured"
  - compression: "Response compression MUST be enabled"

# REQUIRED MIDDLEWARE ORDER
middleware_order:
  1: "Environment validation"
  2: "Security headers (helmet)"
  3: "CORS configuration"
  4: "Compression"
  5: "Body parsing"
  6: "Health endpoints"
  7: "Authentication middleware"
  8: "Protected routes"
  9: "Static file serving"
  10: "Error handling"

# REQUIRED ENDPOINTS
required_endpoints:
  health:
    - path: "/health"
      description: "Comprehensive health check with database and MCP status"
      authentication: false
      response_format: "JSON with status, timestamp, and component health"
    - path: "/health/live"
      description: "Simple liveness check for load balancers"
      authentication: false
      response_format: "JSON with status and timestamp"
    - path: "/health/ready"
      description: "Readiness check with database connectivity"
      authentication: false
      response_format: "JSON with ready status and timestamp"
  config:
    - path: "/api/config"
      description: "Application configuration information"
      authentication: false
      response_format: "JSON with environment and feature flags"

# SECURITY CONFIGURATION
security:
  helmet:
    contentSecurityPolicy:
      required_directives:
        - "defaultSrc: ['self']"
        - "styleSrc: ['self', 'unsafe-inline', 'https://fonts.googleapis.com']"
        - "scriptSrc: ['self', 'unsafe-inline', 'unsafe-eval', Clerk domains]"
        - "fontSrc: ['self', 'https://fonts.gstatic.com']"
        - "imgSrc: ['self', 'data:', 'https:', 'blob:']"
        - "connectSrc: ['self', Clerk domains, MCP server, API base]"
        - "frameSrc: ['self', Clerk domains]"
    crossOriginEmbedderPolicy: false
  cors:
    credentials: true
    methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS", "PATCH"]
    maxAge: 86400

# ENVIRONMENT CONFIGURATION
environment:
  required_vars:
    - "CLERK_SECRET_KEY"
    - "DATABASE_URL_DEVELOPMENT"
    - "DATABASE_URL_TESTING"
    - "DATABASE_URL_PRODUCTION"
  optional_vars:
    - "PORT"
    - "NODE_ENV"
    - "RENDER_GIT_BRANCH"
    - "LOG_LEVEL"
  validation:
    - "All required variables must be validated on startup"
    - "Application must exit with clear error if validation fails"
    - "Configuration summary must be logged (without sensitive values)"

# DATABASE CONFIGURATION
database:
  client: "PrismaClient"
  connection_pooling: true
  logging:
    development: ["query", "info", "warn", "error"]
    production: ["error"]
  health_check: "SELECT 1 query for readiness endpoint"

# FORBIDDEN PATTERNS
forbidden:
  - "console.log statements in production code"
  - "hardcoded environment values"
  - "synchronous file operations in request handlers"
  - "unhandled promise rejections"
  - "missing error handling for async operations"
  - "exposing sensitive information in logs"
  - "blocking the event loop"

# PERFORMANCE REQUIREMENTS
performance:
  response_times:
    health_endpoints: "< 100ms"
    api_endpoints: "< 500ms"
    static_files: "< 200ms"
  memory:
    startup: "< 100MB"
    steady_state: "< 200MB"
    max_heap: "< 500MB"
  compression:
    enabled: true
    threshold: "1kb"
    level: 6

# LOGGING REQUIREMENTS
logging:
  structured: true
  format: "JSON in production, simple in development"
  levels:
    - "error: Application errors and exceptions"
    - "warn: Performance issues and deprecations"
    - "info: Application lifecycle and important events"
    - "debug: Detailed debugging information (development only)"
  forbidden:
    - "console.log in production"
    - "sensitive data in logs"
    - "excessive logging in hot paths"

# AI INSTRUCTIONS
ai_instructions: |
  CRITICAL: This server configuration is LOCKED and follows strict specifications.
  
  BEFORE making ANY changes to server configuration:
  1. Read this lock file completely
  2. Verify changes don't violate invariants
  3. Test all endpoints after changes
  4. Validate performance requirements
  5. Update version and last_updated if changes are necessary
  
  NEVER:
  - Change the server file name from server-unified.js
  - Remove environment validation
  - Reorder middleware without updating this specification
  - Add console.log statements
  - Remove security headers
  - Disable compression
  - Make health endpoints require authentication
  
  ALWAYS:
  - Use ES modules syntax (import/export)
  - Validate environment variables on startup
  - Use structured logging
  - Handle errors gracefully
  - Test all endpoints after changes
  - Maintain performance requirements

# TESTING REQUIREMENTS
testing:
  unit_tests:
    - "Environment validation"
    - "Middleware configuration"
    - "Health endpoint responses"
    - "Error handling"
  integration_tests:
    - "Full server startup"
    - "Database connectivity"
    - "MCP server integration"
    - "Authentication flow"
  load_tests:
    - "Health endpoint performance"
    - "Concurrent request handling"
    - "Memory usage under load"

# MONITORING REQUIREMENTS
monitoring:
  metrics:
    - "Response times for all endpoints"
    - "Error rates by endpoint"
    - "Memory usage"
    - "Database connection pool status"
    - "MCP server connectivity"
  alerts:
    - "Health check failures"
    - "High error rates (> 5%)"
    - "Memory usage > 400MB"
    - "Response times > 1s"
  dashboards:
    - "Application health overview"
    - "Performance metrics"
    - "Error tracking"

# DEPLOYMENT REQUIREMENTS
deployment:
  build_command: "npm run build"
  start_command: "node server-unified.js"
  health_check: "/health/live"
  environment_validation: "Required before deployment"
  rollback_triggers:
    - "Health check failures"
    - "High error rates"
    - "Performance degradation"
