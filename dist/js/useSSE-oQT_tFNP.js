import{d as e}from"./index-DuY1VrEM.js";import{r as t,bg as n}from"./react-core-DlJGLw67.js";import{ch as r}from"./vendor-TZ9aDXZU.js";const a=(e,t)=>["kpi-metrics",{timeRange:e,filters:t}],s=()=>["system-health"],o=e=>["forecast-job",e],c=e=>["stock-optimization-job",e],i=e=>["working-capital-job",e],u=(e,t)=>["capacity-utilization",e,t],l=e=>["import-job",e];new r({defaultOptions:{queries:{...{retry:(e,t)=>t?.response?.status>=400&&t?.response?.status<500?408===t?.response?.status||429===t?.response?.status:e<3,retryDelay:e=>Math.min(1e3*2**e,3e4),refetchOnWindowFocus:!1,refetchOnMount:!0,refetchOnReconnect:!0},staleTime:6e5,cacheTime:18e5,refetchInterval:!1,refetchIntervalInBackground:!1},mutations:{retry:1,retryDelay:1e3,onError:(t,n,r)=>{e.error("Mutation failed:",t,n)}}}});const d={"job.forecast.started":(e,t)=>{t.setQueryData(o(e.jobId),{...e,status:"running",startedAt:(new Date).toISOString()})},"job.forecast.progress":(e,t)=>{t.setQueryData(o(e.jobId),t=>({...t,...e,updatedAt:(new Date).toISOString()}))},"job.forecast.completed":(e,t)=>{t.setQueryData(o(e.jobId),{...e,status:"completed",completedAt:(new Date).toISOString()}),t.invalidateQueries({queryKey:["forecasts"]}),t.invalidateQueries({queryKey:["forecast-series"]})},"job.forecast.failed":(e,t)=>{t.setQueryData(o(e.jobId),{...e,status:"failed",failedAt:(new Date).toISOString()})},"job.stock.started":(e,t)=>{t.setQueryData(c(e.jobId),{...e,status:"running",startedAt:(new Date).toISOString()})},"job.stock.completed":(e,t)=>{t.setQueryData(c(e.jobId),{...e,status:"completed",completedAt:(new Date).toISOString()}),t.invalidateQueries({queryKey:["stock-optimization"]}),t.invalidateQueries({queryKey:["stock-levels"]}),t.invalidateQueries({queryKey:["reorder-suggestions"]})},"job.stock.failed":(e,t)=>{t.setQueryData(c(e.jobId),{...e,status:"failed",failedAt:(new Date).toISOString()})},"job.workingcapital.completed":(e,t)=>{t.setQueryData(i(e.jobId),{...e,status:"completed",completedAt:(new Date).toISOString()}),t.invalidateQueries({queryKey:["working-capital"]}),t.invalidateQueries({queryKey:["wc-projections"]}),t.invalidateQueries({queryKey:["wc-kpis"]})},"metrics.kpi.updated":(e,t)=>{t.setQueryData(a(e.timeRange,e.filters),t=>({...t,...e.metrics,updatedAt:(new Date).toISOString()}))},"metrics.capacity.updated":(e,t)=>{t.setQueryData(u(e.facilities,e.timeRange),t=>({...t,...e.utilization,updatedAt:(new Date).toISOString()}))},"metrics.system.health":(e,t)=>{t.setQueryData(s(),{...e,timestamp:(new Date).toISOString()})},"alert.stock.low":(e,t)=>{t.invalidateQueries({queryKey:["stock-levels"]}),t.invalidateQueries({queryKey:["reorder-suggestions"]})},"alert.stock.critical":(e,t)=>{t.invalidateQueries({queryKey:["stock-levels"]}),t.invalidateQueries({queryKey:["reorder-suggestions"]})},"alert.workingcapital.breach":(e,t)=>{t.invalidateQueries({queryKey:["wc-projections"]}),t.invalidateQueries({queryKey:["wc-kpis"]})},"job.import.started":(e,t)=>{t.setQueryData(l(e.jobId),{...e,status:"running",startedAt:(new Date).toISOString()})},"job.import.completed":(e,t)=>{t.setQueryData(l(e.jobId),{...e,status:"completed",completedAt:(new Date).toISOString()}),t.invalidateQueries({queryKey:["import-jobs"]})},"job.import.failed":(e,t)=>{t.setQueryData(l(e.jobId),{...e,status:"failed",failedAt:(new Date).toISOString()})},"system.maintenance.start":(e,t)=>{t.setQueryData(s(),t=>({...t,maintenance:!0,maintenanceMessage:e.message}))},"system.maintenance.end":(e,t)=>{t.setQueryData(s(),e=>({...e,maintenance:!1,maintenanceMessage:null}))}},m=({endpoint:r="/api/events",enabled:a=!0,reconnectDelay:s=3e3,maxReconnectAttempts:o=10,onConnect:c=null,onDisconnect:i=null,onError:u=null,onMessage:l=null}={})=>{const[m,p]=t.useState({connected:!1,connecting:!1,error:null,reconnectAttempts:0}),y=t.useRef(null),g=t.useRef(null),S=n(),[f,b]=t.useState([]),D=t.useCallback(e=>{},[]),j=t.useCallback(t=>{try{const e=JSON.parse(t.data);D({type:t.type,data:e}),l&&l(t.type,e);const n=d[t.type];n&&n(e,S),window.dispatchEvent(new CustomEvent("sse-message",{detail:{type:t.type,data:e}}))}catch(n){e.error("Error parsing SSE message:",n,t)}},[l,S,D]),Q=t.useCallback(()=>{if(a&&!y.current){p(e=>({...e,connecting:!0,error:null}));try{const t=new EventSource(r);y.current=t,t.onopen=()=>{p({connected:!0,connecting:!1,error:null,reconnectAttempts:0}),c&&c(),g.current&&(clearTimeout(g.current),g.current=null)},t.onerror=n=>{e.error("SSE connection error:",n),p(e=>({connected:!1,connecting:!1,error:n,reconnectAttempts:e.reconnectAttempts+1})),u&&u(n),t.close(),y.current=null,m.reconnectAttempts<o&&(g.current=setTimeout(()=>{Q()},s))},t.onmessage=e=>{j({type:"message",data:e.data})},Object.keys(d).forEach(e=>{t.addEventListener(e,j)})}catch(t){e.error("Failed to create SSE connection:",t),p(e=>({...e,connecting:!1,error:t}))}}},[a,r,o,s,c,u,j,m.reconnectAttempts]),w=t.useCallback(()=>{y.current&&(y.current.close(),y.current=null),g.current&&(clearTimeout(g.current),g.current=null),p({connected:!1,connecting:!1,error:null,reconnectAttempts:0}),i&&i()},[i]),I=t.useCallback(()=>{w(),setTimeout(Q,100)},[w,Q]);return t.useEffect(()=>(a&&Q(),()=>{w()}),[a,Q,w]),t.useEffect(()=>()=>{w()},[w]),{connectionState:m,eventLog:f,connect:Q,disconnect:w,reconnect:I,isConnected:m.connected,isConnecting:m.connecting,hasError:!!m.error,canReconnect:m.reconnectAttempts<o}};export{m as u};
