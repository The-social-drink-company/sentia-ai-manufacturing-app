name: Deploy to Railway

on:
  push:
    branches:
      - development
      - test
      - production
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - test
          - production

env:
  NODE_VERSION: '18'
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

jobs:
  # Code Quality Checks
  quality-check:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9.12.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm run lint
        continue-on-error: true

      - name: Check for security vulnerabilities
        run: pnpm audit --audit-level=moderate
        continue-on-error: true

  # Unit Tests
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: quality-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9.12.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm run test:run
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: coverage/

  # Build Application
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9.12.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm run build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/

  # Deploy to Development
  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/development'
    environment:
      name: development
      url: https://sentia-manufacturing-development.up.railway.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: pnpm install -g @railway/cli

      - name: Deploy to Railway Development
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID }}
          railway up --service ${{ secrets.RAILWAY_DEV_SERVICE_ID }} --environment development
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Verify deployment
        run: |
          sleep 30
          curl -f https://sentia-manufacturing-development.up.railway.app/api/health || exit 1

      - name: Notify deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}' === 'success' ? '✅' : '❌';
            const message = `${status} Development deployment ${{ job.status }}`;
            console.log(message);

  # Deploy to Testing
  deploy-testing:
    name: Deploy to Testing
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/test'
    environment:
      name: testing
      url: https://sentia-manufacturing-testing.up.railway.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: pnpm install -g @railway/cli

      - name: Deploy to Railway Testing
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID }}
          railway up --service ${{ secrets.RAILWAY_TEST_SERVICE_ID }} --environment testing
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Verify deployment
        run: |
          sleep 30
          curl -f https://sentia-manufacturing-testing.up.railway.app/api/health || exit 1

      - name: Run smoke tests
        run: |
          # Add smoke test commands here
          echo "Running smoke tests..."

      - name: Notify deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}' === 'success' ? '✅' : '❌';
            const message = `${status} Testing deployment ${{ job.status }}`;
            console.log(message);

  # Deploy to Production (Manual Approval Required)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/production'
    environment:
      name: production
      url: https://sentia-manufacturing-production.up.railway.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create backup
        run: |
          echo "Creating production backup..."
          # Add backup commands here

      - name: Install Railway CLI
        run: pnpm install -g @railway/cli

      - name: Deploy to Railway Production
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID }}
          railway up --service ${{ secrets.RAILWAY_PROD_SERVICE_ID }} --environment production
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Verify deployment
        run: |
          sleep 60
          curl -f https://sentia-manufacturing-production.up.railway.app/api/health || exit 1

      - name: Run production tests
        run: |
          # Add production verification tests
          echo "Verifying production deployment..."

      - name: Notify deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}' === 'success' ? '✅' : '❌';
            const message = `${status} Production deployment ${{ job.status }}`;
            console.log(message);

      - name: Create release
        if: success()
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            Production deployment successful
            - Commit: ${{ github.sha }}
            - Deployed by: ${{ github.actor }}
            - Environment: Production
          draft: false
          prerelease: false

  # Health Check Monitor
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: [deploy-development, deploy-testing, deploy-production]
    if: always()
    steps:
      - name: Check all environments
        run: |
          echo "Checking environment health..."

          # Development
          if curl -f https://sentia-manufacturing-development.up.railway.app/api/health; then
            echo "✅ Development is healthy"
          else
            echo "❌ Development is down"
          fi

          # Testing
          if curl -f https://sentia-manufacturing-testing.up.railway.app/api/health; then
            echo "✅ Testing is healthy"
          else
            echo "❌ Testing is down"
          fi

          # Production
          if curl -f https://sentia-manufacturing-production.up.railway.app/api/health; then
            echo "✅ Production is healthy"
          else
            echo "❌ Production is down"
          fi