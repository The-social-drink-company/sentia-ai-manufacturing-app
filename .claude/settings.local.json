{
  "permissions": {
    "allow": [
      "Bash(npx husky:*)",
      "Bash(npx husky init:*)",
      "Bash(npm run dev:client:*)",
      "Bash(npm run typecheck:*)",
      "Bash(git add:*)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:server:*)",
      "Bash(npm install:*)",
      "Bash(chmod:*)",
      "Bash(./verify-production-fix.sh:*)",
      "Bash(while true)",
      "Bash(done)",
      "Bash(start https://dashboard.render.com/web/srv-ctg8hkpu0jms73ab8m00/env)",
      "Bash(notepad:*)",
      "Bash(git show:*)",
      "Bash(start https://dashboard.render.com/web/srv-ctg8hkpu0jms73ab8m00/deploys)",
      "Bash(PORT=10000 timeout 5 node render-ultra-minimal.js)",
      "Bash(PORT=5002 timeout 5 node server-fixed.js)",
      "Bash(findstr:*)",
      "Bash(PORT=5003 node server-fixed.js)",
      "Bash(PORT=5003 node scripts/validate-clerk-fix.js)",
      "WebFetch(domain:sentia-manufacturing-development.onrender.com)",
      "Bash(start https://github.com/The-social-drink-company/sentia-manufacturing-dashboard/blob/development/server-fixed.js)",
      "Bash(start:*)",
      "Bash(schtasks:*)",
      "WebFetch(domain:sentia-manufacturing-production.onrender.com)",
      "Read(//c/Users/User/OneDrive - Q&A ERP Solutions (Pty) Ltd (1)/185 - Working Capital Production SaaS App/**)",
      "WebFetch(domain:sentia-manufacturing-testing.onrender.com)",
      "WebFetch(domain:mcp-server-tkyu.onrender.com)",
      "Bash(for route in \"/\" \"/dashboard\" \"/working-capital\" \"/what-if\")",
      "Bash(do echo -n \"$route: \")",
      "Bash(do echo:*)",
      "Bash(git log:*)",
      "WebFetch(domain:github.com)",
      "Bash(git gc:*)",
      "Bash(for pkg in express cors helmet dotenv axios)",
      "Bash(do grep -q \"\"\"$pkg\"\"\" package.json)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(gh repo view:*)",
      "Bash(awk:*)",
      "Bash(do printf \"%-12s: \" \"$branch\")",
      "Bash(for branch in \"origin/development\" \"origin/test\" \"origin/production\")",
      "Bash(do printf \"%-22s: \" \"$branch\")",
      "Bash(git merge-base:*)",
      "Bash(for branch in development test production)",
      "Bash(git ls-tree:*)",
      "Bash(grep:*)",
      "Bash(gh auth:*)",
      "Bash(git rev-list:*)",
      "Bash(gh api:*)",
      "Read(//c/tmp/**)",
      "Bash(set PORT=4150)",
      "Bash(for:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"EXISTS: $file\")",
      "Bash(else echo \"MISSING: $file\")",
      "Bash(fi)",
      "Bash(NODE_OPTIONS='--max-old-space-size=4096' npm run build)",
      "Bash(set NODE_OPTIONS=--max-old-space-size=4096)",
      "Bash(set DEPLOYMENT_STAGE=1)",
      "Bash(set NODE_OPTIONS=--max-old-space-size=3072)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr merge:*)",
      "Bash(git pull:*)",
      "Bash(npm run dev:*)",
      "Bash(rm:*)",
      "Bash(npm cache clean:*)",
      "Bash(npm run test:unit:*)",
      "Bash(npx vitest run:*)",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(npm audit:*)",
      "Bash(npx eslint:*)",
      "Bash(curl:*)",
      "Bash(time npm run build)",
      "Bash(npx browserslist:*)",
      "Bash(npm run clean-install:*)",
      "Bash(dir /b \"C:\\Projects\\Sentia Manufacturing Dashboard\\sentia-manufacturing-dashboard\\src\\features\\working-capital\\tests\")",
      "Bash(npx tsc:*)",
      "Bash(dir \"C:\\Projects\\Sentia Manufacturing Dashboard\\sentia-manufacturing-dashboard\\node_modules\\.bin\")",
      "Bash(npm test)",
      "Bash(npx vitest:*)",
      "Bash(yarn install)",
      "Bash(git fetch:*)",
      "Bash(git checkout:*)",
      "Bash(pnpm run:*)",
      "Bash(npx prisma generate:*)",
      "Bash(node:*)",
      "Bash(npm run quality:*)",
      "Bash(npx --yes @eslint/js@latest init)",
      "Bash(pnpm build:*)",
      "Bash(pnpm audit:*)",
      "Bash(find:*)",
      "Read(//c/Projects/**)",
      "Bash(echo:*)",
      "Bash(while read file)",
      "Bash(then echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm list:*)",
      "Bash(git reset:*)",
      "Bash(gh pr create:*)",
      "Bash(git config:*)",
      "Bash(pnpm run lint:*)",
      "Bash(pnpm run build:*)",
      "Bash(git stash show:*)",
      "Bash(git branch:*)",
      "Bash(git show-branch:*)",
      "Bash(git rm:*)",
      "Bash(git stash push:*)",
      "Bash(git restore:*)",
      "Bash(npx prisma:*)",
      "Bash(powershell:*)",
      "WebFetch(domain:dashboard.render.com)",
      "Bash(timeout:*)",
      "Bash(dir)",
      "Bash(xcopy:*)",
      "Bash(robocopy:*)",
      "Bash(xargs sed:*)",
      "Bash(dir:*)",
      "Bash(netstat:*)",
      "Bash(taskkill:*)",
      "Bash(npx babel:*)",
      "Bash(PORT=5001 pnpm run dev:server)",
      "Bash(pnpm install:*)",
      "Bash(pnpm start:*)",
      "Bash(set PORT=10000)",
      "Bash(python:*)",
      "WebSearch",
      "WebFetch(domain:clerk.com)"
    ],
    "deny": [],
    "ask": []
  }
}