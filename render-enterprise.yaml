# SENTIA MANUFACTURING DASHBOARD - ENTERPRISE RENDER CONFIGURATION
# Bulletproof deployment configuration with zero-failure architecture

services:
  # PRODUCTION ENVIRONMENT - Enterprise Grade
  - type: web
    name: sentia-manufacturing-production
    env: node
    region: oregon
    plan: starter
    buildCommand: corepack enable && pnpm install --frozen-lockfile --prod
    startCommand: pnpm start
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: JWT_SECRET
        generateValue: true
      - key: ENABLE_DETAILED_LOGGING
        value: false
    autoDeploy: true
    branch: production
    rootDir: .
    
  # DEVELOPMENT ENVIRONMENT - Testing & Demo
  - type: web
    name: sentia-manufacturing-development
    env: node
    region: oregon
    plan: starter
    buildCommand: corepack enable && pnpm install --frozen-lockfile --prod
    startCommand: pnpm start:development
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: development
      - key: PORT
        value: 10000
      - key: JWT_SECRET
        generateValue: true
      - key: ENABLE_DETAILED_LOGGING
        value: true
    autoDeploy: true
    branch: development
    rootDir: .
    
  # TESTING ENVIRONMENT - Quality Assurance
  - type: web
    name: sentia-manufacturing-testing
    env: node
    region: oregon
    plan: starter
    buildCommand: corepack enable && pnpm install --frozen-lockfile --prod
    startCommand: pnpm start
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: testing
      - key: PORT
        value: 10000
      - key: JWT_SECRET
        generateValue: true
      - key: ENABLE_DETAILED_LOGGING
        value: true
    autoDeploy: true
    branch: testing
    rootDir: .

# Enterprise Configuration Notes:
# - Minimal dependencies (only express + jsonwebtoken)
# - No complex build process (no Vite, PostCSS, Tailwind build issues)
# - Built-in health checks with /health endpoint
# - JWT-based authentication (no Clerk dependencies)
# - Embedded HTML/CSS/JS (no external build artifacts)
# - Graceful error handling and recovery
# - Production-ready logging and monitoring
# - Zero external dependencies for UI (CDN-based)
# - Bulletproof startup process with fallbacks
