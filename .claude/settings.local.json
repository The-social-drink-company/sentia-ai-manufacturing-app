{
  "permissions": {
    "allow": [
      "Bash(npx husky:*)",
      "Bash(npx husky init:*)",
      "Bash(npm run dev:client:*)",
      "Bash(npm run typecheck:*)",
      "Bash(git add:*)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:server:*)",
      "Bash(npm install:*)",
      "Bash(chmod:*)",
      "Bash(./verify-production-fix.sh:*)",
      "Bash(while true)",
      "Bash(done)",
      "Bash(start https://dashboard.render.com/web/srv-ctg8hkpu0jms73ab8m00/env)",
      "Bash(notepad:*)",
      "Bash(git show:*)",
      "Bash(start https://dashboard.render.com/web/srv-ctg8hkpu0jms73ab8m00/deploys)",
      "Bash(PORT=10000 timeout 5 node render-ultra-minimal.js)",
      "Bash(PORT=5002 timeout 5 node server-fixed.js)",
      "Bash(findstr:*)",
      "Bash(PORT=5003 node server-fixed.js)",
      "Bash(PORT=5003 node scripts/validate-clerk-fix.js)",
      "WebFetch(domain:sentia-manufacturing-development.onrender.com)",
      "Bash(start https://github.com/The-social-drink-company/sentia-manufacturing-dashboard/blob/development/server-fixed.js)",
      "Bash(start:*)",
      "Bash(schtasks:*)",
      "WebFetch(domain:sentia-manufacturing-production.onrender.com)",
      "Read(//c/Users/User/OneDrive - Q&A ERP Solutions (Pty) Ltd (1)/185 - Working Capital Production SaaS App/**)",
      "WebFetch(domain:sentia-manufacturing-testing.onrender.com)",
      "WebFetch(domain:mcp-server-tkyu.onrender.com)",
      "Bash(for route in \"/\" \"/dashboard\" \"/working-capital\" \"/what-if\")",
      "Bash(do echo -n \"$route: \")",
      "Bash(do echo:*)",
      "Bash(git log:*)",
      "WebFetch(domain:github.com)",
      "Bash(git gc:*)",
      "Bash(for pkg in express cors helmet dotenv axios)",
      "Bash(do grep -q \"\"\"$pkg\"\"\" package.json)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(gh repo view:*)",
      "Bash(awk:*)",
      "Bash(do printf \"%-12s: \" \"$branch\")",
      "Bash(for branch in \"origin/development\" \"origin/test\" \"origin/production\")",
      "Bash(do printf \"%-22s: \" \"$branch\")",
      "Bash(git merge-base:*)",
      "Bash(for branch in development test production)",
      "Bash(git ls-tree:*)",
      "Bash(grep:*)",
      "Bash(gh auth:*)",
      "Bash(git rev-list:*)",
      "Bash(gh api:*)",
      "Read(//c/tmp/**)",
      "Bash(set PORT=4150)",
      "Bash(for:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"EXISTS: $file\")",
      "Bash(else echo \"MISSING: $file\")",
      "Bash(fi)",
      "Bash(NODE_OPTIONS='--max-old-space-size=4096' npm run build)",
      "Bash(set NODE_OPTIONS=--max-old-space-size=4096)",
      "Bash(set DEPLOYMENT_STAGE=1)",
      "Bash(set NODE_OPTIONS=--max-old-space-size=3072)",
      "Bash(git commit:*)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=4096\" pnpm run build)",
      "Read(//c/Users/User/Downloads/**)",
      "Bash(git push:*)",
      "Bash(pnpm run:*)"
    ],
    "deny": [],
    "ask": []
  }
}