class t{constructor(){this.currentDate=new Date,this.businessCalendar=new e,this.seasonalPatterns=new a}getCurrentContext(){const t=new Date;return{currentDate:t.toISOString().split("T")[0],currentMonth:t.getMonth()+1,currentQuarter:Math.floor(t.getMonth()/3)+1,currentYear:t.getFullYear(),dayOfWeek:t.getDay(),dayOfMonth:t.getDate(),weekOfYear:this.getWeekOfYear(t),isBusinessDay:this.businessCalendar.isBusinessDay(t),nextBusinessDay:this.businessCalendar.getNextBusinessDay(t)}}generateDateRange(t,e,a=!1){const s=new Date(t),n=[];let r=new Date(s);for(let i=0;i<e;i++)a&&!this.businessCalendar.isBusinessDay(r)||n.push({date:new Date(r),dateString:r.toISOString().split("T")[0],dayOfWeek:r.getDay(),weekOfMonth:Math.ceil(r.getDate()/7),month:r.getMonth()+1,quarter:Math.floor(r.getMonth()/3)+1,isBusinessDay:this.businessCalendar.isBusinessDay(r),isMonthEnd:this.isLastBusinessDayOfMonth(r),isQuarterEnd:this.isLastBusinessDayOfQuarter(r)}),r.setDate(r.getDate()+1);return n}calculateWorkingCapitalByPeriod(t,e,a={}){const{dsoTarget:s=45,dpoTarget:n=60,inventoryDays:r=30,seasonalityFactor:i=.15,currentRevenue:o=4e7}=a,u=this.generateDateRange(new Date,e,!0),l=[];return u.forEach((t,e)=>{const a=this.seasonalPatterns.getBusinessSeasonality(t.month,t.quarter),i=o/365*a,u=i*s,h=.6*i*r,g=.4*i*n,D=u+h-g,d=this.calculateCashInflows(t,i,s),c=this.calculateCashOutflows(t,i,n);l.push({date:t.dateString,dateInfo:t,projectedRevenue:Math.round(i),receivables:Math.round(u),inventory:Math.round(h),payables:Math.round(g),workingCapital:Math.round(D),cashIn:Math.round(d),cashOut:Math.round(c),netCashFlow:Math.round(d-c),seasonalMultiplier:a.toFixed(3),businessDaysInMonth:this.businessCalendar.getBusinessDaysInMonth(t.date.getFullYear(),t.date.getMonth())})}),{projections:l,summary:this.calculatePeriodSummary(l),metadata:{periodDays:e,startDate:u[0]?.dateString,endDate:u[u.length-1]?.dateString,businessDaysCount:u.filter(t=>t.isBusinessDay).length,generatedAt:(new Date).toISOString()}}}calculateCashInflows(t,e,a){return.3*e*Math.max(.7,Math.min(1.3,a/45))}calculateCashOutflows(t,e,a){const s=.65*e,n=Math.max(.8,Math.min(1.2,a/60));let r=0;return 5===t.dayOfWeek&&(r+=.15*e),t.isMonthEnd&&(r+=.05*e),s*n+r}calculatePeriodSummary(t){const e=t.reduce((t,e)=>t+e.cashIn,0),a=t.reduce((t,e)=>t+e.cashOut,0),s=t.reduce((t,e)=>t+e.workingCapital,0)/t.length,n=Math.min(...t.map(t=>t.netCashFlow)),r=Math.max(...t.map(t=>t.netCashFlow)),i=t.filter(t=>t.netCashFlow<0);return{totalCashIn:Math.round(e),totalCashOut:Math.round(a),netCashFlow:Math.round(e-a),averageWorkingCapital:Math.round(s),minDailyCashFlow:Math.round(n),maxDailyCashFlow:Math.round(r),negativeCashDays:i.length,riskDays:i.map(t=>t.date)}}getWeekOfYear(t){const e=new Date(t.getFullYear(),0,1),a=(t-e)/864e5;return Math.ceil((a+e.getDay()+1)/7)}isLastBusinessDayOfMonth(t){const e=new Date(t.getFullYear(),t.getMonth()+1,0);for(;!this.businessCalendar.isBusinessDay(e)&&e.getDate()>1;)e.setDate(e.getDate()-1);return t.toDateString()===e.toDateString()}isLastBusinessDayOfQuarter(t){const e=3*(Math.floor(t.getMonth()/3)+1)-1,a=new Date(t.getFullYear(),e+1,0);for(;!this.businessCalendar.isBusinessDay(a)&&a.getDate()>1;)a.setDate(a.getDate()-1);return t.toDateString()===a.toDateString()}}class e{constructor(){this.holidays={UK:this.getUKHolidays(),EU:this.getEUHolidays(),US:this.getUSHolidays()}}isBusinessDay(t,e="UK"){const a=t.getDay();if(0===a||6===a)return!1;const s=t.toISOString().split("T")[0];return!this.holidays[e].includes(s)}getNextBusinessDay(t,e="UK"){let a=new Date(t);for(a.setDate(a.getDate()+1);!this.isBusinessDay(a,e);)a.setDate(a.getDate()+1);return a}getBusinessDaysInMonth(t,e,a="UK"){let s=0;const n=new Date(t,e+1,0).getDate();for(let r=1;r<=n;r++){const n=new Date(t,e,r);this.isBusinessDay(n,a)&&s++}return s}getUKHolidays(){const t=(new Date).getFullYear();return[`${t}-01-01`,`${t}-03-29`,`${t}-04-01`,`${t}-05-06`,`${t}-05-27`,`${t}-08-26`,`${t}-12-25`,`${t}-12-26`]}getEUHolidays(){const t=(new Date).getFullYear();return[`${t}-01-01`,`${t}-03-29`,`${t}-04-01`,`${t}-05-01`,`${t}-12-25`,`${t}-12-26`]}getUSHolidays(){const t=(new Date).getFullYear();return[`${t}-01-01`,`${t}-01-15`,`${t}-02-19`,`${t}-05-27`,`${t}-07-04`,`${t}-09-02`,`${t}-10-14`,`${t}-11-11`,`${t}-11-28`,`${t}-12-25`]}}class a{constructor(){this.monthlyMultipliers={1:.85,2:.88,3:.95,4:.92,5:.96,6:1,7:.89,8:.87,9:1.05,10:1.08,11:1.12,12:1.15},this.quarterlyTrends={1:.92,2:.96,3:.94,4:1.08}}getBusinessSeasonality(t,e){return.7*(this.monthlyMultipliers[t]||1)+.3*(this.quarterlyTrends[e]||1)}getSeasonalCashflowPattern(t){const e=t>1?t-1:12;return this.monthlyMultipliers[e]||1}}export{t as D};
