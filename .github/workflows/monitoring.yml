name: Production Monitoring

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [development, test, production]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install requests psutil
    
    - name: Set environment URLs
      run: |
        case "${{ matrix.environment }}" in
          development)
            echo "APP_URL=https://dev.sentia-manufacturing.railway.app" >> $GITHUB_ENV
            ;;
          test)
            echo "APP_URL=https://test.sentia-manufacturing.railway.app" >> $GITHUB_ENV
            ;;
          production)
            echo "APP_URL=https://sentia-manufacturing.railway.app" >> $GITHUB_ENV
            ;;
        esac
    
    - name: Run health checks
      run: |
        python scripts/monitoring.py
    
    - name: Alert on failure
      if: failure()
      run: |
        echo "${{ matrix.environment }} environment health check failed!"
        # Slack notification would be sent here if webhook configured

  backup:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 2 * * *'  # Daily at 2 AM
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install postgresql-client
    
    - name: Create database backup
      env:
        DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
      run: |
        python scripts/backup.py
    
    - name: Upload backup to cloud storage
      run: |
        echo "Upload backup to AWS S3 or similar cloud storage"
        # aws s3 cp backups/ s3://sentia-backups/ --recursive
    
    - name: Backup notification
      run: |
        echo "Daily backup completed with status: ${{ job.status }}"
        # Slack notification would be sent here if webhook configured