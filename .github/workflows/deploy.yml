name: Deploy to Railway

on:
  push:
    branches:
      - development
      - test
      - production
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - development
          - test
          - production

env:
  NODE_VERSION: '18'
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

jobs:
  test:
    name: Test & Validate
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test:run
        env:
          CI: true
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY_TEST }}

      - name: Build application
        run: npm run build
        env:
          VITE_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_APP_TITLE: 'Sentia Manufacturing Dashboard'
          VITE_APP_VERSION: ${{ github.sha }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: coverage/
          retention-days: 30

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  deploy-dev:
    name: Deploy to Development
    needs: [test]
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    environment: development
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway Development
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID_DEV }}
          railway up --service web --environment development
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_DEV }}

      - name: Deploy Worker Service
        run: railway up --service worker --environment development
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_DEV }}

      - name: Run smoke tests
        run: |
          sleep 30
          curl -f https://dev.sentia-manufacturing.railway.app/api/health || exit 1

      - name: Notify deployment
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment.id,
              state: 'success',
              environment_url: 'https://dev.sentia-manufacturing.railway.app',
              description: 'Deployed to development'
            });

  deploy-test:
    name: Deploy to Test
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest
    environment: test
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway Test
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID_TEST }}
          railway up --service web --environment test
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_TEST }}

      - name: Deploy Worker Service
        run: railway up --service worker --environment test
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_TEST }}

      - name: Run E2E tests
        run: |
          npm run test:e2e
        env:
          TEST_URL: https://test.sentia-manufacturing.railway.app
          PLAYWRIGHT_HEADLESS: true

      - name: Notify deployment
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment.id,
              state: 'success',
              environment_url: 'https://test.sentia-manufacturing.railway.app',
              description: 'Deployed to test'
            });

  deploy-production:
    name: Deploy to Production
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://sentia-manufacturing.railway.app
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create deployment
        uses: actions/github-script@v7
        id: deployment
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              required_contexts: [],
              auto_merge: false
            });
            return deployment.data.id;

      - name: Setup Railway CLI
        run: npm install -g @railway/cli

      - name: Backup database
        run: |
          echo "Creating database backup before deployment..."
          railway run --service database pg_dump ${{ secrets.DATABASE_URL_PROD }} > backup-$(date +%Y%m%d-%H%M%S).sql
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_PROD }}

      - name: Deploy to Railway Production
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID_PROD }}
          railway up --service web --environment production
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_PROD }}

      - name: Deploy Worker Service
        run: railway up --service worker --environment production
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_PROD }}

      - name: Run database migrations
        run: |
          railway run --service web npm run db:migrate:deploy
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_PROD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }}

      - name: Health check
        run: |
          for i in {1..10}; do
            if curl -f https://sentia-manufacturing.railway.app/api/health; then
              echo "Health check passed"
              break
            fi
            echo "Attempt $i failed, retrying..."
            sleep 10
          done

      - name: Update deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: '${{ job.status }}',
              environment_url: 'https://sentia-manufacturing.railway.app',
              description: 'Production deployment ${{ job.status }}'
            });

  rollback:
    name: Rollback Production
    if: failure() && github.ref == 'refs/heads/production'
    needs: [deploy-production]
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout previous commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.before }}

      - name: Setup Railway CLI
        run: npm install -g @railway/cli

      - name: Rollback deployment
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID_PROD }}
          railway rollback --service web --environment production
          railway rollback --service worker --environment production
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_PROD }}

      - name: Notify rollback
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '⚠️ Production deployment failed and was rolled back to previous version.'
            });