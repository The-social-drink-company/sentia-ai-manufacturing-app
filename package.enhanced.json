{
  "name": "sentia-manufacturing-dashboard",
  "version": "1.0.3",
  "description": "Enterprise Manufacturing Dashboard with React/Vite frontend and Node.js backend",
  "type": "module",
  "scripts": {
    "dev": "concurrently \"pnpm dev:server\" \"pnpm dev:client\"",
    "dev:client": "vite",
    "dev:server": "nodemon server.js",
    "dev:internal": "concurrently \"pnpm dev:server\" \"pnpm dev:client\" --names \"server,client\" --prefix-colors \"blue,green\"",
    
    "prebuild": "rimraf dist",
    "build": "vite build",
    "build:railway": "vite build && echo 'React app build completed for Railway'",
    "build:production": "NODE_ENV=production vite build",
    "build:analyze": "vite build --mode analyze",
    "postbuild": "echo 'Build completed for Railway deployment' && ls -la dist/ && echo 'Assets:' && ls -la dist/assets/ 2>/dev/null || echo 'Assets directory not found' && echo 'Total dist size:' && du -sh dist/ 2>/dev/null || echo 'Dist size check failed'",
    "build:force": "rimraf dist node_modules/.vite && vite build",
    
    "start": "node server.js",
    "start:railway": "NODE_ENV=production node server.js",
    "start:concurrent": "concurrently \"node server.js\"",
    "start:dev": "node server.js",
    "start:production": "NODE_ENV=production node server.js",
    "preview": "vite preview",
    "serve": "node server.js",
    
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:run": "vitest run",
    "test:watch": "vitest --watch",
    "test:coverage": "vitest run --coverage",
    "test:unit": "vitest run --config vitest.config.enhanced.js tests/unit",
    "test:integration": "vitest run --config vitest.config.enhanced.js tests/integration",
    "test:security": "vitest run --config vitest.config.enhanced.js tests/security",
    "test:database": "vitest run --config vitest.config.enhanced.js tests/database",
    "test:api": "vitest run --config vitest.config.enhanced.js tests/api",
    "test:components": "vitest run --config vitest.config.enhanced.js tests/components",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:setup": "playwright install",
    "test:quick": "vitest run --config vitest.config.enhanced.js --reporter=basic tests/unit tests/security",
    "test:uat": "vitest run --config vitest.config.enhanced.js tests/uat",
    "test:performance": "k6 run tests/performance/load-test.js",
    "test:all": "pnpm test:unit && pnpm test:integration && pnpm test:e2e",
    "test:ci": "vitest run --config vitest.config.enhanced.js --coverage --reporter=json --reporter=html",
    
    "lint": "eslint . --config eslint.config.enhanced.js",
    "lint:fix": "eslint . --config eslint.config.enhanced.js --fix",
    "lint:security": "eslint . --config eslint.config.enhanced.js --ext .js,.jsx,.ts,.tsx --rule 'security/detect-object-injection: error'",
    "lint:report": "eslint . --config eslint.config.enhanced.js --format json --output-file reports/eslint-report.json",
    
    "format": "prettier --write . --config .prettierrc.enhanced",
    "format:check": "prettier --check . --config .prettierrc.enhanced",
    
    "typecheck": "tsc --noEmit",
    "type-check": "tsc --noEmit",
    
    "quality": "pnpm lint && pnpm format:check && pnpm typecheck",
    "quality:fix": "pnpm lint:fix && pnpm format",
    "quality:report": "pnpm lint:report && pnpm test:coverage",
    
    "security:audit": "pnpm audit --audit-level=moderate",
    "security:fix": "pnpm audit fix",
    "security:scan": "pnpm lint:security && pnpm security:audit",
    
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:pull": "prisma db pull",
    "db:migrate": "prisma migrate dev",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:migrate:reset": "prisma migrate reset",
    "db:studio": "prisma studio",
    "db:seed": "node prisma/seed.js",
    "db:backup": "node scripts/database-backup.js",
    "db:restore": "node scripts/database-restore.js",
    "db:health": "node scripts/database-health-check.js",
    
    "railway:setup": "node scripts/setup-railway-env.js",
    "railway:deploy": "node scripts/railway-deploy.js",
    "railway:deploy:dev": "railway deploy --environment development",
    "railway:deploy:test": "railway deploy --environment testing", 
    "railway:deploy:prod": "railway deploy --environment production",
    "railway:logs": "railway logs",
    "railway:status": "railway status",
    
    "monitor": "node monitoring-agent.cjs",
    "monitor:status": "node monitoring-agent.cjs --status",
    "monitor:bg": "node monitoring-agent.cjs &",
    "monitor:health": "node scripts/health-monitor.js",
    "monitor:performance": "node scripts/performance-monitor.js",
    
    "deploy:single": "node scripts/enterprise-deployment-automation.js --single",
    "deploy:auto": "node scripts/enterprise-deployment-automation.js --auto",
    "deploy:pipeline": "node scripts/enterprise-deployment-automation.js",
    "deploy:dev": "pnpm build && pnpm railway:deploy:dev",
    "deploy:test": "pnpm build && pnpm railway:deploy:test",
    "deploy:prod": "pnpm build && pnpm railway:deploy:prod",
    
    "env:validate": "node scripts/validate-environment.js",
    "env:setup": "node scripts/setup-environment.js",
    
    "docs:generate": "jsdoc -c jsdoc.config.json",
    "docs:serve": "http-server docs -p 8080",
    
    "clean": "rimraf dist coverage test-results reports node_modules/.cache",
    "clean:all": "pnpm clean && rimraf node_modules",
    "reset": "pnpm clean:all && pnpm install"
    
    "precommit": "pnpm quality && pnpm test:quick",
    "prepush": "pnpm test:all",
    "prepare": "husky install",
    
    "ci:install": "pnpm install --frozen-lockfile",
    "ci:build": "pnpm build:production",
    "ci:test": "pnpm test:ci",
    "ci:quality": "pnpm quality:report",
    "ci:security": "pnpm security:scan",
    "ci:deploy": "pnpm deploy:pipeline"
  },
  "dependencies": {
    "@clerk/clerk-react": "^4.30.0",
    "@prisma/client": "^5.7.1",
    "@tanstack/react-query": "^5.17.9",
    "axios": "^1.12.0",
    "bcryptjs": "^2.4.3",
    "chart.js": "^4.4.1",
    "chartjs-adapter-date-fns": "^3.0.0",
    "concurrently": "^8.2.2",
    "cors": "^2.8.5",
    "date-fns": "^3.2.0",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "helmet": "^7.1.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.303.0",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^6.9.8",
    "prisma": "^5.7.1",
    "react": "^18.2.0",
    "react-chartjs-2": "^5.2.0",
    "react-dom": "^18.2.0",
    "react-hot-toast": "^2.4.1",
    "react-router-dom": "^6.21.1",
    "recharts": "^2.10.3",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.0.0",
    "@playwright/test": "^1.40.1",
    "@testing-library/jest-dom": "^6.2.0",
    "@testing-library/react": "^14.1.2",
    "@testing-library/user-event": "^14.5.2",
    "@types/react": "^18.2.43",
    "@types/react-dom": "^18.2.17",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "@vitejs/plugin-react": "^4.2.1",
    "@vitest/coverage-v8": "^1.1.3",
    "@vitest/ui": "^1.1.3",
    "c8": "^9.0.0",
    "eslint": "^8.57.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-security": "^2.1.0",
    "globals": "^13.24.0",
    "husky": "^8.0.3",
    "jest-environment-jsdom": "^29.7.0",
    "jsdom": "^23.2.0",
    "lint-staged": "^15.2.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.1",
    "rimraf": "^5.0.5",
    "supertest": "^6.3.4",
    "typescript": "^5.3.3",
    "vite": "^5.0.8",
    "vitest": "^1.1.3"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --config eslint.config.enhanced.js --fix",
      "prettier --write --config .prettierrc.enhanced"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write --config .prettierrc.enhanced"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run test:quick",
      "pre-push": "npm run quality && npm run test:unit"
    }
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/The-social-drink-company/sentia-manufacturing-dashboard.git"
  },
  "keywords": [
    "manufacturing",
    "dashboard",
    "react",
    "vite",
    "nodejs",
    "enterprise",
    "railway",
    "postgresql",
    "ai",
    "forecasting"
  ],
  "author": "Sentia Spirits",
  "license": "MIT",
  "private": true
}

