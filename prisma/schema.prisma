generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  OPERATOR
  VIEWER
}

enum ProductionStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  DELAYED
  CANCELLED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum MovementType {
  IN
  OUT
  ADJUSTMENT
  TRANSFER
}

model User {
  id          String      @id @default(cuid())
  email       String      @unique
  name        String?
  role        Role
  preferences Json?
  dashboards  Dashboard[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([role], name: "idx_user_role")
}

model WorkingCapital {
  id                  String   @id @default(cuid())
  date                DateTime @default(now())
  currentAssets       Float
  currentLiabilities  Float
  inventory           Float
  accountsReceivable  Float
  accountsPayable     Float
  cash                Float
  dso                 Int
  dpo                 Int
  dio                 Int
  cashConversionCycle Int
  workingCapitalRatio Float
  quickRatio          Float
  createdAt           DateTime @default(now())

  @@index([date], name: "idx_working_capital_date")
}

model CashRunway {
  id              String   @id @default(cuid())
  date            DateTime
  cashBalance     Float
  monthlyBurnRate Float
  monthlyRevenue  Float
  netBurnRate     Float
  runwayMonths    Float
  coverageDay30   Float
  coverageDay60   Float
  coverageDay90   Float
  coverageDay120  Float
  coverageDay180  Float
  createdAt       DateTime @default(now())

  @@index([date], name: "idx_cash_runway_date")
}

model Production {
  id                String           @id @default(cuid())
  jobNumber         String           @unique
  productName       String
  productSKU        String?
  quantity          Int
  targetQuantity    Int
  completedQuantity Int              @default(0)
  status            ProductionStatus
  priority          Priority
  startDate         DateTime
  targetDate        DateTime
  completionDate    DateTime?
  qualityScore      Float?
  defectRate        Float?
  efficiency        Float?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt

  @@index([status], name: "idx_production_status")
  @@index([priority], name: "idx_production_priority")
  @@index([targetDate], name: "idx_production_target_date")
}

model Inventory {
  id              String              @id @default(cuid())
  sku             String              @unique
  name            String
  description     String?
  quantity        Int
  reorderPoint    Int
  reorderQuantity Int
  location        String
  warehouse       String
  unitCost        Float
  totalValue      Float
  lastMovement    DateTime?
  movements       InventoryMovement[]
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt

  @@index([warehouse, location], name: "idx_inventory_location")
  @@index([quantity], name: "idx_inventory_quantity")
}

model InventoryMovement {
  id          String        @id @default(cuid())
  inventoryId String
  inventory   Inventory     @relation(fields: [inventoryId], references: [id], onDelete: Cascade)
  type        MovementType
  quantity    Int
  reference   String?
  reason      String?
  performedBy String?
  createdAt   DateTime      @default(now())

  @@index([inventoryId, createdAt], name: "idx_inventory_movement_inventory_time")
  @@index([type, createdAt], name: "idx_inventory_movement_type_time")
}

model AIInsight {
  id         String                      @id @default(cuid())
  type       String
  category   String
  title      String
  content    String                      @db.Text
  confidence Float
  priority   String
  embedding  Float[]
  metadata   Json
  actionable Boolean                     @default(false)
  actioned   Boolean                     @default(false)
  createdAt  DateTime                    @default(now())

  @@index([type, category], name: "idx_ai_insight_type_category")
  @@index([actionable, actioned], name: "idx_ai_insight_actionability")
  @@index([confidence], name: "idx_ai_insight_confidence")
}

model Dashboard {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  name      String
  type      String
  layout    Json
  widgets   Json
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, name], name: "uix_dashboard_user_name")
  @@index([userId, type], name: "idx_dashboard_user_type")
  @@index([isDefault], name: "idx_dashboard_is_default")
}

model Analytics {
  id        String   @id @default(cuid())
  date      DateTime
  metric    String
  value     Float
  dimension String?
  forecast  Float?
  actual    Float?
  variance  Float?
  metadata  Json
  createdAt DateTime @default(now())

  @@index([date, metric], name: "idx_analytics_date_metric")
  @@index([metric, dimension], name: "idx_analytics_metric_dimension")
}

model MCPRequest {
  id             String   @id @default(cuid())
  tool           String
  request        Json
  response       Json?
  status         String
  processingTime Int?
  error          String?
  createdAt      DateTime @default(now())

  @@index([tool, status], name: "idx_mcp_request_tool_status")
  @@index([createdAt], name: "idx_mcp_request_created_at")
}
