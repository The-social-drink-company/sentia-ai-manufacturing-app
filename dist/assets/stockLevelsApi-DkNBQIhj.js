import{b as a}from"./DashboardEnterprise-CsB9lit6.js";const o=()=>[{product:"GABA Red",sku:"GABA-RED-001",currentStock:1250,reorderLevel:500,maxStock:2e3,unit:"bottles",status:"in-stock",lastUpdated:new Date().toISOString()},{product:"GABA Black",sku:"GABA-BLACK-001",currentStock:890,reorderLevel:800,maxStock:1800,unit:"bottles",status:"low-stock",lastUpdated:new Date().toISOString()},{product:"GABA Gold",sku:"GABA-GOLD-001",currentStock:2100,reorderLevel:600,maxStock:2500,unit:"bottles",status:"in-stock",lastUpdated:new Date().toISOString()}];class s{async getGABAStockLevels(){try{const e=await a.get("/inventory/levels",{params:{category:"GABA",limit:10}});return e.data&&e.data.items?e.data.items.map(t=>({product:t.name||t.sku,sku:t.sku,currentStock:t.quantity,reorderLevel:t.reorderPoint,maxStock:t.reorderPoint*4,unit:t.unit,status:t.status,lastUpdated:t.updatedAt})):o()}catch(e){return console.warn("[StockLevelsAPI] Failed to fetch from API, using mock data:",e.message),o()}}async getStockSummary(){try{const e=await this.getGABAStockLevels();return{totalProducts:e.length,inStock:e.filter(t=>t.status==="in-stock").length,lowStock:e.filter(t=>t.status==="low-stock").length,outOfStock:e.filter(t=>t.status==="out-of-stock").length,totalValue:e.reduce((t,r)=>t+r.currentStock*25,0),lastUpdated:new Date().toISOString()}}catch(e){return console.error("[StockLevelsAPI] Failed to get stock summary:",e),{totalProducts:0,inStock:0,lowStock:0,outOfStock:0,totalValue:0,lastUpdated:new Date().toISOString()}}}}const l=new s;export{l as s};
