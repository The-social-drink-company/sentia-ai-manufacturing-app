"""Initial PostgreSQL migration with UUID support

Revision ID: 0420cd0c943c
Revises: 
Create Date: 2025-08-26 15:02:31.770144

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0420cd0c943c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('resources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('capacity', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_maintenance', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_maintenance', sa.DateTime(timezone=True), nullable=True),
    sa.Column('efficiency_rating', sa.Float(), nullable=True),
    sa.Column('cost_per_hour', sa.Float(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('resources', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_resources_name'), ['name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('display_name', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('password_reset_token', sa.String(length=100), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('account_locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('ix_user_last_login', ['last_login'], unique=False)
        batch_op.create_index('ix_user_role_active', ['role', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('markets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('region', sa.String(length=50), nullable=False),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('tax_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('standard_shipping_days', sa.Integer(), nullable=True),
    sa.Column('express_shipping_days', sa.Integer(), nullable=True),
    sa.Column('customs_requirements', sa.Text(), nullable=True),
    sa.Column('regulatory_requirements', sa.JSON(), nullable=True),
    sa.Column('import_restrictions', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('markets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_markets_code'), ['code'], unique=True)

    op.create_table('products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sku', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('market_region', sa.String(length=10), nullable=False),
    sa.Column('weight_kg', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('dimensions_cm', sa.String(length=50), nullable=True),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('selling_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('production_time_hours', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('batch_size_min', sa.Integer(), nullable=True),
    sa.Column('batch_size_max', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index('ix_product_active_created', ['is_active', 'created_at'], unique=False)
        batch_op.create_index('ix_product_category_market', ['category', 'market_region'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_sku'), ['sku'], unique=True)

    op.create_table('schedules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('optimization_score', sa.Float(), nullable=True),
    sa.Column('total_jobs', sa.Integer(), nullable=True),
    sa.Column('completed_jobs', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('value_text', sa.Text(), nullable=True),
    sa.Column('value_integer', sa.BigInteger(), nullable=True),
    sa.Column('value_decimal', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('value_boolean', sa.Boolean(), nullable=True),
    sa.Column('value_json', sa.JSON(), nullable=True),
    sa.Column('value_date', sa.Date(), nullable=True),
    sa.Column('value_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('data_type', sa.String(length=20), nullable=False),
    sa.Column('is_encrypted', sa.Boolean(), nullable=False),
    sa.Column('validation_rules', sa.JSON(), nullable=True),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('is_system_setting', sa.Boolean(), nullable=False),
    sa.Column('is_sensitive', sa.Boolean(), nullable=False),
    sa.Column('requires_restart', sa.Boolean(), nullable=False),
    sa.Column('environment', sa.String(length=20), nullable=True),
    sa.Column('scope', sa.String(length=50), nullable=True),
    sa.Column('scope_id', sa.String(length=100), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('effective_from', sa.DateTime(timezone=True), nullable=True),
    sa.Column('effective_to', sa.DateTime(timezone=True), nullable=True),
    sa.Column('previous_value', sa.Text(), nullable=True),
    sa.Column('change_reason', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('category', 'key', 'scope', 'scope_id', 'environment', 'version', name='uq_system_settings_active')
    )
    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.create_index('ix_system_settings_active_effective', ['is_active', 'effective_from', 'effective_to'], unique=False)
        batch_op.create_index(batch_op.f('ix_system_settings_category'), ['category'], unique=False)
        batch_op.create_index('ix_system_settings_category_key', ['category', 'key'], unique=False)
        batch_op.create_index('ix_system_settings_environment', ['environment'], unique=False)
        batch_op.create_index(batch_op.f('ix_system_settings_key'), ['key'], unique=False)
        batch_op.create_index('ix_system_settings_scope', ['scope', 'scope_id'], unique=False)

    op.create_table('inventory_levels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('location_type', sa.String(length=50), nullable=False),
    sa.Column('location_id', sa.String(length=100), nullable=False),
    sa.Column('location_name', sa.String(length=200), nullable=True),
    sa.Column('country_code', sa.String(length=10), nullable=True),
    sa.Column('available_quantity', sa.Integer(), nullable=False),
    sa.Column('reserved_quantity', sa.Integer(), nullable=True),
    sa.Column('inbound_quantity', sa.Integer(), nullable=True),
    sa.Column('defective_quantity', sa.Integer(), nullable=True),
    sa.Column('total_quantity', sa.Integer(), nullable=False),
    sa.Column('reorder_point', sa.Integer(), nullable=True),
    sa.Column('safety_stock', sa.Integer(), nullable=True),
    sa.Column('maximum_stock', sa.Integer(), nullable=True),
    sa.Column('economic_order_quantity', sa.Integer(), nullable=True),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_value', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('storage_cost_per_unit_monthly', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('average_age_days', sa.Integer(), nullable=True),
    sa.Column('oldest_stock_date', sa.Date(), nullable=True),
    sa.Column('turnover_rate_monthly', sa.Numeric(precision=6, scale=4), nullable=True),
    sa.Column('expected_demand_30d', sa.Integer(), nullable=True),
    sa.Column('days_of_supply', sa.Integer(), nullable=True),
    sa.Column('stock_out_risk_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('last_movement_date', sa.Date(), nullable=True),
    sa.Column('last_count_date', sa.Date(), nullable=True),
    sa.Column('requires_recount', sa.Boolean(), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_status', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('adjustment_reason', sa.String(length=200), nullable=True),
    sa.Column('snapshot_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id', 'location_id', 'snapshot_date', name='uq_inventory_product_location_date')
    )
    with op.batch_alter_table('inventory_levels', schema=None) as batch_op:
        batch_op.create_index('ix_inventory_country', ['country_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_levels_snapshot_date'), ['snapshot_date'], unique=False)
        batch_op.create_index('ix_inventory_location_type', ['location_type'], unique=False)
        batch_op.create_index('ix_inventory_product_location', ['product_id', 'location_id'], unique=False)
        batch_op.create_index('ix_inventory_snapshot_date', ['snapshot_date'], unique=False)
        batch_op.create_index('ix_inventory_status_date', ['status', 'snapshot_date'], unique=False)

    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_number', sa.String(length=50), nullable=False),
    sa.Column('customer_name', sa.String(length=200), nullable=False),
    sa.Column('product_type', sa.String(length=100), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('estimated_hours', sa.Float(), nullable=True),
    sa.Column('actual_hours', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('schedule_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('jobs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_jobs_job_number'), ['job_number'], unique=True)

    op.create_table('sales_channels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('channel_type', sa.String(length=50), nullable=False),
    sa.Column('market_code', sa.String(length=10), nullable=False),
    sa.Column('api_endpoint', sa.String(length=255), nullable=True),
    sa.Column('api_credentials_encrypted', sa.Text(), nullable=True),
    sa.Column('marketplace_id', sa.String(length=100), nullable=True),
    sa.Column('commission_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('fulfillment_method', sa.String(length=20), nullable=True),
    sa.Column('average_processing_days', sa.Integer(), nullable=True),
    sa.Column('sync_enabled', sa.Boolean(), nullable=False),
    sa.Column('sync_frequency_minutes', sa.Integer(), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_status', sa.String(length=20), nullable=True),
    sa.Column('sync_error_message', sa.Text(), nullable=True),
    sa.Column('monthly_sales_target', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('conversion_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('return_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['market_code'], ['markets.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales_channels', schema=None) as batch_op:
        batch_op.create_index('ix_sales_channel_active_sync', ['is_active', 'sync_enabled'], unique=False)
        batch_op.create_index('ix_sales_channel_last_sync', ['last_sync_at'], unique=False)
        batch_op.create_index('ix_sales_channel_type_market', ['channel_type', 'market_code'], unique=False)

    op.create_table('forecasts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('sales_channel_id', sa.UUID(), nullable=False),
    sa.Column('forecast_date', sa.Date(), nullable=False),
    sa.Column('forecast_period', sa.String(length=20), nullable=False),
    sa.Column('forecast_horizon_days', sa.Integer(), nullable=False),
    sa.Column('predicted_demand', sa.Integer(), nullable=False),
    sa.Column('demand_lower_bound', sa.Integer(), nullable=True),
    sa.Column('demand_upper_bound', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('predicted_revenue', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('revenue_lower_bound', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('revenue_upper_bound', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('seasonal_factor', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('trend_factor', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('promotional_factor', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('external_factors', sa.JSON(), nullable=True),
    sa.Column('model_type', sa.String(length=50), nullable=False),
    sa.Column('model_version', sa.String(length=20), nullable=True),
    sa.Column('training_data_start', sa.Date(), nullable=True),
    sa.Column('training_data_end', sa.Date(), nullable=True),
    sa.Column('model_accuracy_score', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_demand', sa.Integer(), nullable=True),
    sa.Column('actual_revenue', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('forecast_error', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('forecast_accuracy', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('manual_adjustments', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sales_channel_id'], ['sales_channels.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id', 'sales_channel_id', 'forecast_date', 'forecast_period', name='uq_forecast_product_channel_date_period')
    )
    with op.batch_alter_table('forecasts', schema=None) as batch_op:
        batch_op.create_index('ix_forecast_date_channel', ['forecast_date', 'sales_channel_id'], unique=False)
        batch_op.create_index('ix_forecast_date_product', ['forecast_date', 'product_id'], unique=False)
        batch_op.create_index('ix_forecast_model_type', ['model_type'], unique=False)
        batch_op.create_index('ix_forecast_product_channel_date', ['product_id', 'sales_channel_id', 'forecast_date'], unique=False)
        batch_op.create_index('ix_forecast_status_approved', ['status', 'is_approved'], unique=False)
        batch_op.create_index(batch_op.f('ix_forecasts_forecast_date'), ['forecast_date'], unique=False)

    op.create_table('historical_sales',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('sales_channel_id', sa.UUID(), nullable=False),
    sa.Column('sale_date', sa.Date(), nullable=False),
    sa.Column('sale_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('quantity_sold', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('gross_revenue', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('discounts', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('net_revenue', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('cost_of_goods_sold', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('shipping_cost', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('platform_fees', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('taxes', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('net_profit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('order_id', sa.String(length=100), nullable=True),
    sa.Column('order_item_id', sa.String(length=100), nullable=True),
    sa.Column('customer_type', sa.String(length=20), nullable=True),
    sa.Column('fulfillment_method', sa.String(length=20), nullable=True),
    sa.Column('shipping_country', sa.String(length=10), nullable=True),
    sa.Column('shipping_region', sa.String(length=50), nullable=True),
    sa.Column('season', sa.String(length=20), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('data_quality_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('is_validated', sa.Boolean(), nullable=False),
    sa.Column('validation_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sales_channel_id'], ['sales_channels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('historical_sales', schema=None) as batch_op:
        batch_op.create_index('ix_historical_sales_date_channel', ['sale_date', 'sales_channel_id'], unique=False)
        batch_op.create_index('ix_historical_sales_date_product', ['sale_date', 'product_id'], unique=False)
        batch_op.create_index('ix_historical_sales_order', ['order_id'], unique=False)
        batch_op.create_index('ix_historical_sales_product_channel_date', ['product_id', 'sales_channel_id', 'sale_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_historical_sales_sale_date'), ['sale_date'], unique=False)
        batch_op.create_index('ix_historical_sales_timeseries', ['product_id', 'sales_channel_id', 'sale_date', 'quantity_sold'], unique=False)
        batch_op.create_index('ix_historical_sales_validated', ['is_validated', 'data_quality_score'], unique=False)

    op.create_table('working_capital',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('projection_date', sa.Date(), nullable=False),
    sa.Column('projection_period', sa.String(length=20), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=True),
    sa.Column('market_code', sa.String(length=10), nullable=True),
    sa.Column('sales_channel_id', sa.UUID(), nullable=True),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('projected_sales_revenue', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('actual_sales_revenue', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('payment_terms_days', sa.Integer(), nullable=True),
    sa.Column('collection_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('cost_of_goods_sold', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('inventory_investment', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('manufacturing_costs', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('raw_materials_cost', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('labor_costs', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('marketing_spend', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('platform_fees', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('shipping_costs', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('storage_fees', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('administrative_costs', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('vat_gst_payable', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('corporate_tax_payable', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('customs_duties', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('accounts_receivable', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('inventory_value', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('accounts_payable', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('accrued_expenses', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('net_cash_flow', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('cumulative_cash_flow', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('cash_conversion_cycle_days', sa.Integer(), nullable=True),
    sa.Column('working_capital_requirement', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('working_capital_turnover', sa.Numeric(precision=6, scale=4), nullable=True),
    sa.Column('days_sales_outstanding', sa.Integer(), nullable=True),
    sa.Column('days_inventory_outstanding', sa.Integer(), nullable=True),
    sa.Column('days_payable_outstanding', sa.Integer(), nullable=True),
    sa.Column('scenario_type', sa.String(length=20), nullable=True),
    sa.Column('confidence_level', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('risk_factors', sa.JSON(), nullable=True),
    sa.Column('sensitivity_analysis', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('assumptions', sa.JSON(), nullable=True),
    sa.Column('data_sources', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['market_code'], ['markets.code'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sales_channel_id'], ['sales_channels.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id', 'market_code', 'sales_channel_id', 'projection_date', 'projection_period', 'scenario_type', name='uq_working_capital_projection')
    )
    with op.batch_alter_table('working_capital', schema=None) as batch_op:
        batch_op.create_index('ix_working_capital_currency', ['currency_code'], unique=False)
        batch_op.create_index('ix_working_capital_date', ['projection_date'], unique=False)
        batch_op.create_index('ix_working_capital_market_date', ['market_code', 'projection_date'], unique=False)
        batch_op.create_index('ix_working_capital_product_date', ['product_id', 'projection_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_working_capital_projection_date'), ['projection_date'], unique=False)
        batch_op.create_index('ix_working_capital_scenario_status', ['scenario_type', 'status'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('working_capital', schema=None) as batch_op:
        batch_op.drop_index('ix_working_capital_scenario_status')
        batch_op.drop_index(batch_op.f('ix_working_capital_projection_date'))
        batch_op.drop_index('ix_working_capital_product_date')
        batch_op.drop_index('ix_working_capital_market_date')
        batch_op.drop_index('ix_working_capital_date')
        batch_op.drop_index('ix_working_capital_currency')

    op.drop_table('working_capital')
    with op.batch_alter_table('historical_sales', schema=None) as batch_op:
        batch_op.drop_index('ix_historical_sales_validated')
        batch_op.drop_index('ix_historical_sales_timeseries')
        batch_op.drop_index(batch_op.f('ix_historical_sales_sale_date'))
        batch_op.drop_index('ix_historical_sales_product_channel_date')
        batch_op.drop_index('ix_historical_sales_order')
        batch_op.drop_index('ix_historical_sales_date_product')
        batch_op.drop_index('ix_historical_sales_date_channel')

    op.drop_table('historical_sales')
    with op.batch_alter_table('forecasts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forecasts_forecast_date'))
        batch_op.drop_index('ix_forecast_status_approved')
        batch_op.drop_index('ix_forecast_product_channel_date')
        batch_op.drop_index('ix_forecast_model_type')
        batch_op.drop_index('ix_forecast_date_product')
        batch_op.drop_index('ix_forecast_date_channel')

    op.drop_table('forecasts')
    with op.batch_alter_table('sales_channels', schema=None) as batch_op:
        batch_op.drop_index('ix_sales_channel_type_market')
        batch_op.drop_index('ix_sales_channel_last_sync')
        batch_op.drop_index('ix_sales_channel_active_sync')

    op.drop_table('sales_channels')
    with op.batch_alter_table('jobs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_jobs_job_number'))

    op.drop_table('jobs')
    with op.batch_alter_table('inventory_levels', schema=None) as batch_op:
        batch_op.drop_index('ix_inventory_status_date')
        batch_op.drop_index('ix_inventory_snapshot_date')
        batch_op.drop_index('ix_inventory_product_location')
        batch_op.drop_index('ix_inventory_location_type')
        batch_op.drop_index(batch_op.f('ix_inventory_levels_snapshot_date'))
        batch_op.drop_index('ix_inventory_country')

    op.drop_table('inventory_levels')
    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.drop_index('ix_system_settings_scope')
        batch_op.drop_index(batch_op.f('ix_system_settings_key'))
        batch_op.drop_index('ix_system_settings_environment')
        batch_op.drop_index('ix_system_settings_category_key')
        batch_op.drop_index(batch_op.f('ix_system_settings_category'))
        batch_op.drop_index('ix_system_settings_active_effective')

    op.drop_table('system_settings')
    op.drop_table('schedules')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_sku'))
        batch_op.drop_index('ix_product_category_market')
        batch_op.drop_index('ix_product_active_created')

    op.drop_table('products')
    with op.batch_alter_table('markets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_markets_code'))

    op.drop_table('markets')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index('ix_user_role_active')
        batch_op.drop_index('ix_user_last_login')

    op.drop_table('users')
    with op.batch_alter_table('resources', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_resources_name'))

    op.drop_table('resources')
    # ### end Alembic commands ###
